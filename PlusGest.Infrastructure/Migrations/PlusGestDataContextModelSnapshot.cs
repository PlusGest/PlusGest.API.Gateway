// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlusGest.Infrastructure.Database;

#nullable disable

namespace PlusGest.Infrastructure.Migrations
{
    [DbContext(typeof(PlusGestDataContext))]
    partial class PlusGestDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PlusGest.Domain.Entities.Cliente.ClienteEntity", b =>
                {
                    b.Property<Guid>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("ClienteObservacaoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Endereço")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FotoUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<Guid>("SimuladorId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("Usuarioid")
                        .HasColumnType("char(36)");

                    b.HasKey("ClienteId");

                    b.HasIndex("ClienteObservacaoId");

                    b.HasIndex("SimuladorId");

                    b.HasIndex("Usuarioid");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("PlusGest.Domain.Entities.Cliente.ClienteObservacao.ClienteObservacaoEntity", b =>
                {
                    b.Property<Guid>("ClienteObservacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Obervacao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("ClienteObservacaoId");

                    b.ToTable("ClienteObservacao", (string)null);
                });

            modelBuilder.Entity("PlusGest.Domain.Entities.Simulador.SimuladorCliente.SimuladorClienteEntity", b =>
                {
                    b.Property<Guid>("SimuladorClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)");

                    b.HasKey("SimuladorClienteId");

                    b.ToTable("SimuladorCliente", (string)null);
                });

            modelBuilder.Entity("PlusGest.Domain.Entities.Simulador.SimuladorEntity", b =>
                {
                    b.Property<Guid>("SimuladorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("DadosAnonimizados")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("DataAtentimento")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DataExpriracao")
                        .HasColumnType("datetime");

                    b.Property<int>("Midia")
                        .HasColumnType("int");

                    b.Property<Guid>("SimuladorClienteId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SimuladorImovelId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SimuladorNegociacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SimuladorPagamentoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SimuladorVeiculoId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.HasKey("SimuladorId");

                    b.HasIndex("SimuladorClienteId");

                    b.HasIndex("SimuladorImovelId");

                    b.HasIndex("SimuladorNegociacaoId");

                    b.HasIndex("SimuladorPagamentoId");

                    b.HasIndex("SimuladorVeiculoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Simulador", (string)null);
                });

            modelBuilder.Entity("PlusGest.Domain.Entities.Simulador.SimuladorImovel.SimuladorImovelEntity", b =>
                {
                    b.Property<Guid>("SimuladorImovelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("AmortizacaoMensal")
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("BancoFinanceira")
                        .HasColumnType("int");

                    b.Property<decimal>("JurosTotal")
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("TaxaJurosAnual")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("TaxaJurosMensal")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("TotalParcelas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("ValorEntrada")
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("ValorFinanciado")
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("ValorImovel")
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("ValorParcelaFinal")
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("ValorParcelaInicial")
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("ValorTotalPago")
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("VencimentoDia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("SimuladorImovelId");

                    b.ToTable("SimuladorImovel", (string)null);
                });

            modelBuilder.Entity("PlusGest.Domain.Entities.Simulador.SimuladorNegociacao.SimuladorNegociacaoEntity", b =>
                {
                    b.Property<Guid>("SimuladorNegociacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("EconomiaGerada")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("PercentualDesconto")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("PrazoQuitacaoDias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int>("TipoCenario")
                        .HasColumnType("int");

                    b.Property<int>("TotalParcelas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("ValorDividaOriginal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorParcelaReduzida")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorProposta")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("SimuladorNegociacaoId");

                    b.ToTable("SimuladorNegociacao", (string)null);
                });

            modelBuilder.Entity("PlusGest.Domain.Entities.Simulador.SimuladorPagamento.SimuladorPagamentoEntity", b =>
                {
                    b.Property<Guid>("SimuladorPagamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("FormaPagamento")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Parcelas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("PercentualDesconto")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("PercentualJuros")
                        .HasColumnType("decimal(5,2)");

                    b.Property<bool>("TemJuros")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<decimal>("ValorParcela")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("SimuladorPagamentoId");

                    b.ToTable("SimuladorPagamento", (string)null);
                });

            modelBuilder.Entity("PlusGest.Domain.Entities.Simulador.SimuladorVeiculo.SimuladorVeiculoEntity", b =>
                {
                    b.Property<Guid>("SimuladorVeiculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("BancoFinanceira")
                        .HasColumnType("int");

                    b.Property<decimal>("JurosFinanciado")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ParcelasAtraso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ParcelasPagas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ParcelasRestantes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("TaxaJuros")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("TotalFinanciado")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("TotalParcelas")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorAberto")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorAtraso")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorEntrada")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorFinalBem")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorFinanciado")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorParcela")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorVeiculo")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Veiculo")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<int>("VencimentoDia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("SimuladorVeiculoId");

                    b.ToTable("SimuladorVeiculo", (string)null);
                });

            modelBuilder.Entity("PlusGest.Domain.Entities.Usuario.UsuarioEntity", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime");

                    b.Property<int>("Departamento")
                        .HasColumnType("int");

                    b.Property<string>("FotoUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Funcao")
                        .HasColumnType("int");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Unidade")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("PlusGest.Domain.Entities.Cliente.ClienteEntity", b =>
                {
                    b.HasOne("PlusGest.Domain.Entities.Cliente.ClienteObservacao.ClienteObservacaoEntity", null)
                        .WithMany()
                        .HasForeignKey("ClienteObservacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlusGest.Domain.Entities.Simulador.SimuladorEntity", null)
                        .WithMany()
                        .HasForeignKey("SimuladorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlusGest.Domain.Entities.Usuario.UsuarioEntity", null)
                        .WithMany()
                        .HasForeignKey("Usuarioid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PlusGest.Domain.Entities.Simulador.SimuladorEntity", b =>
                {
                    b.HasOne("PlusGest.Domain.Entities.Simulador.SimuladorCliente.SimuladorClienteEntity", null)
                        .WithMany()
                        .HasForeignKey("SimuladorClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlusGest.Domain.Entities.Simulador.SimuladorImovel.SimuladorImovelEntity", null)
                        .WithMany()
                        .HasForeignKey("SimuladorImovelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlusGest.Domain.Entities.Simulador.SimuladorNegociacao.SimuladorNegociacaoEntity", null)
                        .WithMany()
                        .HasForeignKey("SimuladorNegociacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlusGest.Domain.Entities.Simulador.SimuladorPagamento.SimuladorPagamentoEntity", null)
                        .WithMany()
                        .HasForeignKey("SimuladorPagamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlusGest.Domain.Entities.Simulador.SimuladorVeiculo.SimuladorVeiculoEntity", null)
                        .WithMany()
                        .HasForeignKey("SimuladorVeiculoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlusGest.Domain.Entities.Usuario.UsuarioEntity", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
